{"version":3,"file":"static/js/68.2451949a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","helpers/api.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/components/Notification/Notificatiom.module.css?faae","components/Notification/Notificatiom.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"title\":\"MovieList_title__QyMtJ\",\"img\":\"MovieList_img__Tmz2C\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport notFoundImg from \"../../helpers/logo192.png\"\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const moviesList = movies.map(({ id, title, poster_path }) => (\n    <li className={css.item} key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {poster_path && <img\n          className={css.img}\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          alt={title}\n          width=\"300\"\n        />}\n          {!poster_path && <img\n          className={css.img}\n          src={notFoundImg}\n          alt={title}\n          width=\"300\"\n        />}\n        <p className={css.title}>{title}</p>\n      </Link>\n    </li>\n      \n  ));\n  return <ul className={css.list}>{moviesList}</ul>;\n\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import axios from 'axios'\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: \"120636c1014a93c478761ecd30b2dd89\",\n  },\n});\nexport const getTrending = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getSearchMovie  = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchbar\":\"SearchForm_searchbar__ufFAl\",\"button\":\"SearchForm_button__UXY06\",\"label\":\"SearchForm_label__GvSVH\",\"input\":\"SearchForm_input__HOxJo\"};","\nimport { useState} from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { MdLocationSearching } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport css from '../SearchForm/SearchForm.module.css';\n\nconst SearchForm = ({ onSearch }) => {\n   const [search, setSearch] = useState('');\n\n  const handleChange = event => {\n    setSearch(event.target.value.toLowerCase());\n  };\n  const formSubmit = event => {\n    event.preventDefault();\n    if (search.trim() === '') {\n      Notify.failure('Sorry, no matching your search query. Please try again.');\n      return;\n    }\n    onSearch(search);\n    setSearch('');\n  };\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={formSubmit}>\n        <button type=\"submit\" className={css.button}>\n          <span className={css.label}>Search</span>\n\n          <MdLocationSearching size={30} fill={'blue'} />\n        </button>\n        <input\n          className={css.input}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={search}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\nSearchForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\nexport default SearchForm;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"load__text\":\"Notificatiom_load__text__Tj9kI\"};","import css from \"../Notification/Notificatiom.module.css\"\n\nconst Notification = () => {\n  return (\n      <p className={css.load__text}>We're sorry, but you've reached the end of search results</p>\n\n  );\n};\nexport default Notification;\n","\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from \"../../helpers/api\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Notification from \"../../components/Notification/Notificatiom\";\nimport MovieList from \"../../components/MovieList/MovieList\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n\n  useEffect(() => {\n    const fetchSearchMovie = async () => {\n      try {\n        const { data } = await getSearchMovie (search);\n        setMovies(data.results);\n      } catch (error) {\n          Notify.failure(`Sorry something went wrong. ${error.message}`);\n      }\n    };\n    if (search) {\n      fetchSearchMovie();\n    }\n  }, [search]);\n  \n  const handleSearch = value => {\n    if (!value.trim()) {\n      return;\n    }\n    setSearchParams({ search: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSearch={handleSearch} />\n      {error && <p>{error}</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {search && movies.length === 0 && !error && (\n        <p>No matches: {search}</p>\n      )}\n       {movies.length < 20 && movies.length > 1 && <Notification />}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["movies","location","useLocation","moviesList","map","id","title","poster_path","className","css","state","from","to","src","alt","width","notFoundImg","moviesInstanse","axios","baseURL","params","api_key","getTrending","get","getMovieParams","getCast","getReviews","getSearchMovie","value","query","onSearch","useState","search","setSearch","onSubmit","event","preventDefault","trim","Notify","type","size","fill","name","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","setMovies","error","useSearchParams","searchParams","setSearchParams","useEffect","fetchSearchMovie","data","results","message","length","MovieList"],"sourceRoot":""}