{"version":3,"file":"static/js/76.c871a030.chunk.js","mappings":"6PACA,EAAiD,mBAAjD,EAA2E,mBAA3E,EAAoG,kBAApG,EAA6H,mB,kBCyC7H,EAnCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAQJ,EAAOK,SAFxB,gBAENC,EAFM,EAENA,KACRP,EAAQO,EAAKR,MAHC,gDAKdS,EAAAA,OAAAA,QAAA,sCAA8C,KAAMC,UALtC,yDAAH,qDAQfL,GACD,GAAE,CAACH,EAAOK,UAEX,IAAMI,EAAaX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,QAAlC,OAC1B,gBAAIC,UAAWC,EAAf,UACGL,IACC,gBACEI,UAAWC,EACXC,IAAG,6CAAwCN,GAC3CO,IAAKL,EACLM,MAAM,SAERR,IACA,gBAAKI,UAAWC,EAASC,IAAKG,EAAaF,IAAKL,EAAMM,MAAM,SAE9D,cAAGJ,UAAWC,EAAd,SAAyBH,KACzB,eAAGE,UAAWC,EAAd,wBAAoCJ,OAZRE,EADJ,IAiB5B,OAAO,gBAAIC,UAAWC,EAAf,cAA2BP,IACnC,C,2JCvCKY,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTvB,OAAQ,CACNwB,QAAS,sCAGAC,EAAc,WACzB,OAAOJ,EAAeK,IAAI,sBAC3B,EAEYC,EAAiB,SAAAC,GAC5B,OAAOP,EAAeK,IAAf,iBAA6BE,GACrC,EAEYxB,EAAU,SAAAwB,GACrB,OAAOP,EAAeK,IAAf,iBAA6BE,EAA7B,YACR,EAEYC,EAAa,SAAAD,GACxB,OAAOP,EAAeK,IAAf,iBAA6BE,EAA7B,YACR,EAEYE,EAAkB,SAAAC,GAC7B,OAAOV,EAAeK,IAAI,gBAAiB,CACzC1B,OAAQ,CACNgC,MAAOD,IAIZ,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","helpers/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Cast_link__VaL-5\",\"list\":\"Cast_list__GlWio\",\"text\":\"Cast_text__P2vgu\",\"img\":\"Cast_img__-isbW\",\"item\":\"Cast_item__a0CDL\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../helpers/api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from '../Cast/Cast.module.css';\nimport notFoundImg from '../../helpers/logo192.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { data } = await getCast(params.movieId);\n        setCast(data.cast);\n      } catch (error) {\n        Notify.failure(`Sorry something went wrong. ${error.message}`);\n      }\n    };\n    fetchCast();\n  }, [params.movieId]);\n\n  const castMarkup = cast.map(({ profile_path, character, name, cast_id }) => (\n    <li className={css.item} key={cast_id}>\n      {profile_path && (\n        <img\n          className={css.img}\n          src={`https://image.tmdb.org/t/p/original${profile_path}`}\n          alt={name}\n          width=\"200\"\n        />)}\n      {!profile_path && (\n        <img className={css.img} src={notFoundImg} alt={name} width=\"200\" />\n      )}\n      <p className={css.text}>{name}</p>\n      <p className={css.text}>Character: {character}</p>\n    </li>\n  ));\n\n  return <ul className={css.list}> {castMarkup}</ul>;\n};\nexport default Cast;\n","import axios from 'axios'\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: \"120636c1014a93c478761ecd30b2dd89\",\n  },\n});\nexport const getTrending = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getSearchMovie  = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n  \n};\n"],"names":["useState","cast","setCast","params","useParams","useEffect","fetchCast","getCast","movieId","data","Notify","message","castMarkup","map","profile_path","character","name","cast_id","className","css","src","alt","width","notFoundImg","moviesInstanse","axios","baseURL","api_key","getTrending","get","getMovieParams","id","getReviews","getSearchMovie","value","query"],"sourceRoot":""}