{"version":3,"file":"static/js/312.2e9cd50a.chunk.js","mappings":"6MACA,EAAwB,uB,SCIlBA,EAAaC,SAASC,cAAc,gBAU1C,EARe,WACb,OAAOC,EAAAA,EAAAA,eACL,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAOC,MAAM,WAAWC,OAAQ,IAAKC,MAAO,QAE9CR,EAEH,C,wJCbD,GAAgB,KAAO,oBAAoB,KAAO,qB,SC4ClD,EAtCgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEMC,EAAAA,EAAAA,IAAWJ,EAAOK,SAFxB,gBAETC,EAFS,EAETA,KACRX,EAAWW,EAAKC,SAHC,gDAKjBR,EAAS,EAAD,IACRS,EAAAA,OAAAA,QAAA,sCAA8C,KAAMC,UANnC,yBAQjBZ,GAAa,GARI,4EAAH,qDAWlBM,GACD,GAAE,CAACH,EAAOK,UAEX,IAAIK,EAAS,GASb,OARuB,IAAnBhB,EAAQiB,SACVD,EAAShB,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACnB,gBAAI3B,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,MAAf,SAA2BwB,KAC3B,cAAGzB,UAAWC,EAAAA,cAAd,SAAkCyB,MAFNC,EADX,MAQrB,2BACGnB,IAAa,SAAC,UAAD,IACbE,IAAS,uBAAIA,EAAMW,UACnBf,EAAQiB,OAASD,GAAS,cAAGtB,UAAWC,EAAAA,KAAd,wDAGhC,C,2JC1CK2B,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTlB,OAAQ,CACNmB,QAAS,sCAGAC,EAAc,WACzB,OAAOJ,EAAeK,IAAI,sBAC3B,EAEYC,EAAiB,SAAAP,GAC5B,OAAOC,EAAeK,IAAf,iBAA6BN,GACrC,EAEYQ,EAAU,SAAAR,GACrB,OAAOC,EAAeK,IAAf,iBAA6BN,EAA7B,YACR,EAEYX,EAAa,SAAAW,GACxB,OAAOC,EAAeK,IAAf,iBAA6BN,EAA7B,YACR,EAEYS,EAAkB,SAAAC,GAC7B,OAAOT,EAAeK,IAAI,gBAAiB,CACzCrB,OAAQ,CACN0B,MAAOD,IAIZ,C","sources":["webpack://react-homework-template/./src/components/Loading/Loading.module.css?25ee","components/Loading/Loading.jsx","webpack://react-homework-template/./src/components/Revie/Revie.module.css?7092","components/Revie/Revie.jsx","helpers/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"style\":\"Loading_style__k9MZd\"};","import { createPortal } from 'react-dom';\nimport  {Audio}  from 'react-loader-spinner';\n\nimport css from '../Loading/Loading.module.css';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <div className={css.style}>\n      <Audio color=\" #3f51b5\" height={150} width={150} />\n    </div>,\n    loaderRoot\n  );\n};\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Revie_text__ht0Ol\",\"item\":\"Revie_item__aQAmz\"};","import { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../helpers/api';\nimport Loader from '../Loading/Loading';\nimport css from \"../Revie/Revie.module.css\"\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await getReviews(params.movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error);\n        Notify.failure(`Sorry something went wrong. ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [params.movieId]);\n\n  let review = [];\n  if (reviews.length !== 0) {\n    review = reviews.map(({ author, content, id }) => (\n      <li className={css.item} key={id}>\n        <h3 className={css.title}>{author}</h3>\n        <p className={css.text__content}>{content}</p>\n      </li>\n    ));\n  }\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>{error.message}</p>}\n      {reviews.length ? review : <p className={css.text}>We don't have any reviews for this movie</p>}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios'\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: \"120636c1014a93c478761ecd30b2dd89\",\n  },\n});\nexport const getTrending = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getSearchMovie  = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n  \n};\n"],"names":["loaderRoot","document","querySelector","createPortal","className","css","color","height","width","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","params","useParams","useEffect","fetchReviews","getReviews","movieId","data","results","Notify","message","review","length","map","author","content","id","moviesInstanse","axios","baseURL","api_key","getTrending","get","getMovieParams","getCast","getSearchMovie","value","query"],"sourceRoot":""}